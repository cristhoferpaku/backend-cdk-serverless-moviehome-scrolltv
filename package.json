{
  "name": "backend-cdk-serverless-moviehome-scrolltv",
  "version": "0.1.0",
  "description": "Backend serverless para MovieHome ScrollTV usando AWS CDK",
  "bin": {
    "serverless-cdk": "bin/serverless-cdk.js"
  },
  "scripts": {
    "build": "tsc",
    "watch": "tsc -w",
    "clean": "rimraf dist",
    "prebuild": "npm run clean",
    "presynth": "echo 'Using ts-node directly, no build required'",
    "predeploy": "echo 'Using ts-node directly, no build required'",
    "test": "jest",
    "cdk": "cdk",
    "deploy": "cdk deploy --all",
    "destroy": "cdk destroy --all",
    "synth": "cdk synth",
    "diff": "cdk diff",
    "bootstrap": "cdk bootstrap",
    "build:layers": "powershell -ExecutionPolicy Bypass -File scripts/build-layers.ps1",
    "build:layers:bash": "bash scripts/build-layers.sh",
    "deploy:layers": "npm run build:layers && cdk deploy LambdaLayerStack",
    "deploy:functions": "cdk deploy LambdaFunctionStack",
    "deploy:roles": "cdk deploy LambdaRoleStack",
    "deploy:api": "cdk deploy ApiGatewayStack",
    "deploy:incremental": "npm run deploy:layers && npm run deploy:functions && npm run deploy:api",
    "update:layers": "npm run build:layers && npm run deploy:layers && echo 'âœ… Capas actualizadas! Ahora ejecuta: npm run deploy:functions'",
    "deploy:safe": "npm run deploy:layers && npm run deploy:roles && npm run deploy:functions && npm run deploy:api",
    "deploy:domain": "powershell -ExecutionPolicy Bypass -File scripts/deploy-with-domain.ps1",
    "deploy:domain:dev": "powershell -ExecutionPolicy Bypass -File scripts/deploy-with-domain.ps1 -Environment dev",
    "deploy:domain:prod": "powershell -ExecutionPolicy Bypass -File scripts/deploy-with-domain.ps1 -Environment prod",
    "check:domain": "nslookup api.scrollprivate.work",
    "test:domain": "curl -X GET https://api.scrollprivate.work/admin/platforms -H \"Content-Type: application/json\"",
    "outputs": "aws cloudformation describe-stacks --stack-name moviehome-0001-scrolltv-dev-api-gateway-stack --query 'Stacks[0].Outputs' --output table"
  },
  "devDependencies": {
    "@types/aws-lambda": "^8.10.119",
    "@types/bcryptjs": "^2.4.6",
    "@types/jest": "^29.4.0",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "18.14.6",
    "@types/pg": "^8.15.4",
    "aws-cdk": "2.150.0",
    "esbuild": "~0.21.5",
    "jest": "^29.5.0",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.0.5",
    "ts-node": "^10.9.1",
    "typescript": "~4.9.5"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.414.0",
    "@aws-sdk/client-secrets-manager": "^3.414.0",
    "aws-cdk-lib": "2.150.0",
    "bcryptjs": "^2.4.3",
    "constructs": "^10.0.0",
    "jsonwebtoken": "^9.0.2",
    "pg": "^8.11.3",
    "source-map-support": "^0.5.21"
  }
}
